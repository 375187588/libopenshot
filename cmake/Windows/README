####################################################################
                  Install Dependencies for Windows
####################################################################

Most Windows dependencies needed for libopenshot-audio, libopenshot, and openshot-qt
can be installed easily with MSYS2 and the pacman package manager. Follow these
directions to setup a Windows build environment for OpenShot:

####################################################################

1) Install MSYS2 (http://www.msys2.org/)

2) Run MSYS2 command prompt (for example: C:\msys64\msys2_shell.cmd)

3) Append PATH (so MSYS2 can find executables and libraries):
  $ PATH=$PATH:/c/msys64/mingw64/bin:/c/msys64/mingw64/lib     (64-bit PATH)
    or 
  $ PATH=$PATH:/c/msys32/mingw32/bin:/c/msys32/mingw32/lib     (32-bit PATH)

4) Update and upgrade all packages
  $ pacman -Syu

5a) Install the following packages:
*** for 64-BIT support ***

  $ pacman -S --needed base-devel mingw-w64-x86_64-toolchain
  $ pacman -S mingw64/mingw-w64-x86_64-ffmpeg
  $ pacman -S mingw64/mingw-w64-x86_64-python3-pyqt5
  $ pacman -S mingw64/mingw-w64-x86_64-swig
  $ pacman -S mingw64/mingw-w64-x86_64-cmake
  $ pacman -S mingw64/mingw-w64-x86_64-doxygen
  $ pacman -S mingw64/mingw-w64-x86_64-python3-pip
  $ pacman -S mingw32/mingw-w64-i686-zeromq
  $ pacman -S mingw64/mingw-w64-x86_64-python3-pyzmq
  $ pacman -S mingw64/mingw-w64-x86_64-python3-cx_Freeze
  $ pacman -S git

  Install ImageMagick if needed (OPTIONAL and NOT NEEDED)
  $ pacman -S mingw64/mingw-w64-x86_64-imagemagick
  
5b) Install the following packages:
*** for 32-BIT support ***

  $ pacman -S --needed base-devel mingw32/mingw-w64-i686-toolchain
  $ pacman -S mingw32/mingw-w64-i686-ffmpeg
  $ pacman -S mingw32/mingw-w64-i686-python3-pyqt5
  $ pacman -S mingw32/mingw-w64-i686-swig
  $ pacman -S mingw32/mingw-w64-i686-cmake
  $ pacman -S mingw32/mingw-w64-i686-doxygen
  $ pacman -S mingw32/mingw-w64-i686-python3-pip
  $ pacman -S mingw32/mingw-w64-i686-zeromq
  $ pacman -S mingw32/mingw-w64-i686-python3-pyzmq
  $ pacman -S mingw32/mingw-w64-i686-python3-cx_Freeze
  $ pacman -S git

  Install ImageMagick if needed (OPTIONAL and NOT NEEDED)
  $ pacman -S mingw32/mingw-w32-x86_32-imagemagick
  
6) Install Python PIP Dependencies
  $ pip3 install httplib2
  $ pip3 install slacker
  $ pip3 install tinys3
  $ pip3 install github3.py
  $ pip3 install requests
  
7) Download Unittest++ (https://github.com/unittest-cpp/unittest-cpp) into /c/home/USER/unittest-cpp-master/
  Configure Unittest++:
    $ cmake -G "MSYS Makefiles" ../ -DCMAKE_MAKE_PROGRAM=mingw32-make -DCMAKE_INSTALL_PREFIX:PATH=/usr
  Build Unittest++
    $ mingw32-make install

8) ZMQ++ Header (This might not be needed anymore)
  NOTE: Download and copy zmq.hpp into the /c/msys64/mingw64/include/ folder


####################################################################
            OPTIONAL:  Installing ImageMagick on Windows
####################################################################

If you would rather install ImageMagick from source code yourself, follow these steps:

Step 1) Copy [build-imagemagick.sh and urls.txt] into your local MSYS2 environment
Step 2) Run MSYS2 Shell
Step 3) Execute this command
  $ ./build-imagemagick.sh